package inventorymanagement;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import inventorymanagement.MyConnection;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Bharat Kumar Tajwani
 */
public class SalesReturn extends javax.swing.JFrame implements CaretListener,KeyListener{

    
    static PreparedStatement pr;
    static MyConnection con;
    static int rs1;
    static int cunt=1,cunt2=0,cunt3=0,cunt4=0;
    int loadActive=0;

    public SalesReturn() {

        try {
            con = new MyConnection();
        } catch (ClassNotFoundException e) {
            System.out.println("Exception:" + e.getMessage());
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null, "Something went wrong.");
        }

        initComponents();
        setLocationRelativeTo(null);
        addKeyListener(this);
        setFocusable(true);
        setFocusTraversalKeysEnabled(false);
        sales_tf.addCaretListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        sales_tf = new javax.swing.JTextField();
        load_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        salesReturn_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inventory Management System[Sales Return]");

        jButton4.setText("Delete");
        jButton4.setToolTipText("Select any row to delete it");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("View");
        jButton5.setToolTipText("Click this to view saled product ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter sale id");

        sales_tf.setToolTipText("Enter sale id to view saled product");

        load_btn.setText("Load");
        load_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load_btnActionPerformed(evt);
            }
        });

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Product Price", "Quantity", "Total Amount", "Sale_id"
            }
        ));
        jScrollPane1.setViewportView(table1);

        salesReturn_btn.setText("Return");
        salesReturn_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesReturn_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(sales_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(load_btn, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(salesReturn_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sales_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(load_btn)
                        .addGap(18, 18, 18)
                        .addComponent(salesReturn_btn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void load_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load_btnActionPerformed
        loadActive=1;
        String s = sales_tf.getText();
        int i = Integer.parseInt(s);
        String query = "select * from sales where sale_id='" + i + "' ";
        
        try {
            con.rs = con.st.executeQuery(query);
            Object col[] = {"Product",  "Quantity","Per_Unit_Price", "Total_amount", "Sale_id"};
            DefaultTableModel model = new DefaultTableModel(col, 0);

            while (con.rs.next()) {
                model.addRow(new Object[]{con.rs.getString(1), con.rs.getString(2), con.rs.getString(3), con.rs.getString(4), con.rs.getInt(5)});
            }
            table1.setModel(model);
            

//            con.rs = con.st.executeQuery(query2);
           
        } catch (SQLException ex) {
            Logger.getLogger(SalesReturn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_load_btnActionPerformed

    private void salesReturn_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesReturn_btnActionPerformed
        if(table1.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null, "Please select any product to return its 1 unit.");
        }
        else{
            try {
                int r = table1.getSelectedRow();
                con.rs = con.st.executeQuery("select product_price,quantity from sales_returned s where sale_id ='"+sales_tf.getText()+"' and product_name ='"+table1.getValueAt(r, 0)+"'"); 
                con.rs.next();
                System.out.println((Double.parseDouble(con.rs.getString(2))+1)+"\t"+(Double.parseDouble(con.rs.getString(2))+1)*Double.parseDouble(con.rs.getString(1)));      
                String query ="update sales_returned set quantity ='"+(Double.parseDouble(con.rs.getString(2))+1)+"',total_amount='"+(Double.parseDouble(con.rs.getString(2))+1)*Double.parseDouble(con.rs.getString(1))+"' where product_name='"+table1.getValueAt(r, 0)+"' and sale_id='"+sales_tf.getText()+"'";
                int a = con.st.executeUpdate(query);
                con.st = con.con.createStatement();
                con.rs = con.st.executeQuery("select per_unit_price,quantity from sales where sale_id ='"+sales_tf.getText()+"' and product_name = '"+table1.getValueAt(r, 0)+"'");
                con.rs.next();
                String query2 = "update sales set quantity ='"+(Double.parseDouble(con.rs.getString(2))-1)+"',total_price='"+(Double.parseDouble(con.rs.getString(2))-1)*Double.parseDouble(con.rs.getString(1))+"' where product_name='"+table1.getValueAt(r, 0)+"' and sale_id='"+sales_tf.getText()+"'";
                int b = con.st.executeUpdate(query2);
                System.out.println("a:"+a+"\tb:"+b);
                if(a==1&& b==1)
                    JOptionPane.showMessageDialog(null, "Sales returned successfully");
                else
                    JOptionPane.showMessageDialog(null, "Something went wrong");
            } catch (SQLException ex) {
                Logger.getLogger(SalesReturn.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_salesReturn_btnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            int r = table1.getSelectedRow();
            int a = con.st.executeUpdate("delete from sales_returned where sale_id='"+table1.getValueAt(r, 4)+"'and product_name='"+table1.getValueAt(r, 0)+"';");
            if(a==1)
                JOptionPane.showMessageDialog(null,"Deleted Successfully.");
            else
                JOptionPane.showMessageDialog(null, "Something went wrong!!!");
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(SalesReturn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            
            DefaultTableModel model =(DefaultTableModel) table1.getModel();
            model.setRowCount(0);
            ResultSet rs = con.st.executeQuery("select * from sales_returned;");
            while(rs.next()){
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
            }
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(SalesReturn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
               UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
              
            }
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesReturn().setVisible(true);
            }
        });
    }

    public void updateTable() throws SQLException {
        String sale_id = sales_tf.getText();
        int i = Integer.parseInt(sale_id);
        String query = "Select * from sales where sale_id='" + i + "' ";
        con.rs = con.st.executeQuery(query);
        Object col[] = {"product_name", "Quantity","per_unit_price", "total_amount", "Sale_id"};
        DefaultTableModel model = new DefaultTableModel(col, 0);

        while (con.rs.next()) {
            model.addRow(new Object[]{con.rs.getString(1), con.rs.getDate(2), con.rs.getInt(3), con.rs.getInt(4), con.rs.getInt(5), con.rs.getInt(6)});

        }
        table1.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton load_btn;
    private javax.swing.JButton salesReturn_btn;
    private javax.swing.JTextField sales_tf;
    private static javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void caretUpdate(CaretEvent ce) {
        if(ce.getSource()== sales_tf){
            for (int i = 0; i < sales_tf.getText().length(); i++) {
                if(Character.isLetter(sales_tf.getText().charAt(i))){
                    sales_tf.setText("");
                    break;
                }
                        
                
            }
        }
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyTyped(KeyEvent ke) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent ke) {
         if(KeyEvent.getKeyText(ke.getKeyCode()).equalsIgnoreCase("Escape")){
                this.setVisible(false);
                new Dashboard().setVisible(true);
            }
//throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyReleased(KeyEvent ke) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
