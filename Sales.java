package inventorymanagement;


import com.sun.xml.internal.ws.api.streaming.XMLStreamReaderFactory;
import inventorymanagement.MyConnection;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Bilawal
 */

public class Sales extends javax.swing.JFrame implements KeyListener {
    MyConnection con;
    static int f1=0;

    /**
     * Creates new form NewJFrame
   77  * @throws java.lang.ClassNotFoundException
     * @throws java.sql.SQLException
     */
    public Sales() throws ClassNotFoundException, SQLException{
        con = new MyConnection();
        initComponents();
        addKeyListener(this);
        setFocusable(true);
        setFocusTraversalKeysEnabled(false);
        setLocationRelativeTo(null);
        barcodetf.addKeyListener(this);
        searchtf.addKeyListener(this);
        givenamounttf.addKeyListener(this);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        searchtf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        barcodetf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        grosstf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        discounttf = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        givenamounttf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        changetogivetf = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inventory Management System[Sales]");

        jButton4.setText("DELETE");
        jButton4.setToolTipText("Select any row to delete it");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("VIEW");
        jButton5.setToolTipText("Click this to view all the sales");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setText("SEARCH");

        searchtf.setToolTipText("Enter sale id to view all the saled product");
        searchtf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchtfActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel2.setText("ENTER BARCODE");

        barcodetf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barcodetfActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 204));
        jLabel3.setText("PAYMENTS");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel4.setText("GROSS TOTAL");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setText("TOTAL DISCOUNT");

        discounttf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discounttfActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel6.setText("PAYMENT TYPE");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("AMOUNT GIVEN");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel8.setText("CHANGE TO GIVE");

        jButton6.setBackground(new java.awt.Color(255, 0, 0));
        jButton6.setText("CHECKOUT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 0, 0));
        jButton7.setText("PAY");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PRODUCT", "QUANTITY", "PER UNIT PRICE", "TOTAL AMOUNT"
            }
        ));
        jScrollPane1.setViewportView(table);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "CASH", "DEBIT CARD", "CREDIT CARD", "" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(barcodetf, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel5)
                        .addComponent(jLabel8)
                        .addComponent(givenamounttf)
                        .addComponent(changetogivetf)
                        .addComponent(discounttf)
                        .addComponent(grosstf)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchtf))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(barcodetf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(grosstf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(discounttf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(givenamounttf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changetogivetf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5)
                            .addComponent(jLabel1)
                            .addComponent(searchtf, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        f1=1;     
        try {
            query="select * from sales ";    
            con.rs=con.st.executeQuery(query);  
            DefaultTableModel model =  (DefaultTableModel)table.getModel();
            model.setRowCount(0);
            while(con.rs.next()){  
                model.addRow( new Object[]{con.rs.getString(1),con.rs.getString(2),con.rs.getString(3),con.rs.getString(4)});
            }
            table.setModel(model);
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void searchtfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchtfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchtfActionPerformed

    private void discounttfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discounttfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discounttfActionPerformed

    private void barcodetfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barcodetfActionPerformed
 
        
            // TODO add your handling code here:
    }//GEN-LAST:event_barcodetfActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(table.getSelectedRow()>-1){
            DefaultTableModel model = (DefaultTableModel)table.getModel();
            model.removeRow(table.getSelectedRow());
            JOptionPane.showMessageDialog(null, "Product removed successfully.");
        }
        else
            JOptionPane.showMessageDialog(null, "No row selected to delete.");
        

// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        double total =0;
        for (int i = 0; i < table.getRowCount(); i++) {
            total+=Double.parseDouble(table.getValueAt(i, 3).toString());
        }
        grosstf.setText(Double.toString(total));
        if(total<1000){
            discounttf.setText("5");
        }
        else if(total>1000){
            discounttf.setText("10");
        }
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(grosstf.getText().equals("")||discounttf.getText().equals("")||jComboBox1.getSelectedItem().toString().equals("")||givenamounttf.getText().equals("")||changetogivetf.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please complete all formalities.");
        }
        else{
            try {
                String query = "select max(sale_id) from sales";
                con.rs = con.st.executeQuery(query);
                int sale_id=1;
                boolean b = con.rs.next();
                System.out.println(b);
                if(b==false)
                    sale_id=1;
                else 
                    sale_id = con.rs.getInt(1)+1;
                for (int i = 0; i < table.getRowCount(); i++) {
                    query = "insert into sales values('"+table.getValueAt(i, 0)+"','"+table.getValueAt(i, 1)+"','"+table.getValueAt(i, 2)+"','"+table.getValueAt(i, 3)+"',"+sale_id+")";
                    String query2 = "insert into sales_returned values('"+table.getValueAt(i, 0)+"','"+table.getValueAt(i, 2)+"','0','0','"+sale_id+"')";
                    int a = con.st.executeUpdate(query);
                    con.st.executeUpdate(query2);
                }
                JOptionPane.showMessageDialog(null,"Successfully payment made ");
                DefaultTableModel model = (DefaultTableModel)table.getModel();
                model.setRowCount(0); 
                barcodetf.setText("");
                grosstf.setText("");
                givenamounttf.setText("");
                changetogivetf.setText("");
                jComboBox1.setSelectedItem("");
                discounttf.setText("");
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, "Something went wrong");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
            }
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Something went wrong");
                java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong");
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong");
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong");
            java.util.logging.Logger.getLogger(Sales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Sales().setVisible(true);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Something went wrong");
                    } 
            }
        });
        /* Create and display the form */
     
    }
public static  String query,s;  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcodetf;
    private javax.swing.JTextField changetogivetf;
    private javax.swing.JTextField discounttf;
    private javax.swing.JTextField givenamounttf;
    private javax.swing.JTextField grosstf;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchtf;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
    public static Object col[];
    public void keyTyped(KeyEvent ke) {
        System.out.println("type");
    }

     @SuppressWarnings("empty-statement")
     @Override
    public void keyPressed(KeyEvent ke) {
        try{
            if(KeyEvent.getKeyText(ke.getKeyCode()).equalsIgnoreCase("Escape")){
                this.setVisible(false);
                new Dashboard().setVisible(true);
            }
            System.out.println(KeyEvent.getKeyText(ke.getKeyCode()));
            if(!grosstf.getText().equals("") && !givenamounttf.getText().equals("")&&KeyEvent.getKeyText(ke.getKeyCode()).equalsIgnoreCase("shift") ){
                double total = Double.parseDouble(grosstf.getText());
                total = total - (total* Double.parseDouble(discounttf.getText())/100);
                double given = Double.parseDouble(givenamounttf.getText());             
                changetogivetf.setText(Double.toString(given-total));
            }
            if(KeyEvent.getKeyText(ke.getKeyCode()).equalsIgnoreCase("Enter")){
                if(table.getRowCount()>0&& !barcodetf.getText().equals("")){
                    s=barcodetf.getText();
                    int i=Integer.parseInt(s);
                    query="select * from product_pricing where product_name = (select p_name from products where barcode='"+i+"') "; 
                    System.out.println(query);
                    con.rs=con.st.executeQuery(query);
                    int j=0; // row number indicator.
                    System.out.println(table.getModel().getValueAt(j, 0));
                    Object q =0;        // q is for getting quantity of existing product in table.
                    int f2=0;           // flag variable to check if product already exist in model.
                    if(con.rs.next()){
                        while(j<table.getModel().getRowCount()){
                            if(table.getModel().getValueAt(j, 0).toString().equalsIgnoreCase(con.rs.getString(1))){
                                // if selected product already added in model table.
                                f2=1;
                                q=table.getModel().getValueAt(j, 1);
                                break;   
                            }
                            j++;
                        }
                        if(f2==1 && f1==0){
                            // updating quantity
                            table.getModel().setValueAt(Double.parseDouble(q.toString())+1,j,1); 
                            // updating total price
                            table.getModel().setValueAt((Double.parseDouble(q.toString())+1)*Double.parseDouble(table.getModel().getValueAt(j,2).toString()), j, 3);
                            f1=0;
                            table.setModel(table.getModel());
                        }
                        else if(f2==0){
                            System.out.println("new");
                            String s=barcodetf.getText();
                            int i1=Integer.parseInt(s);
                            String query="select product_name,selling_price from product_pricing where product_name = (select p_name from products where barcode= '"+i1+"')";
                            con.rs=con.st.executeQuery(query);
                            System.out.println(query);
                            DefaultTableModel model= (DefaultTableModel)table.getModel();
                            //model = (DefaultTableModel)table.getModel();
                            con.rs.next();
                            Object col2[] = {con.rs.getString(1),1,con.rs.getString(2),Double.parseDouble(con.rs.getString(2))*1};
                            model.addRow(col2);
                            table.setModel(table.getModel());
                        }
                    }
                }
                // when model table is empty
                else if(!barcodetf.getText().equals("")){
                    System.out.println("elelelel");
                    String s=barcodetf.getText();
                    int i1=Integer.parseInt(s);
                    String query="select product_name,selling_price from product_pricing where product_name = (select p_name from products where barcode= '"+i1+"')";
                    con.rs=con.st.executeQuery(query);
                    DefaultTableModel model= (DefaultTableModel)table.getModel();
                    //model = (DefaultTableModel)table.getModel();
                    con.rs.next();
                    Object col2[] = {con.rs.getString(1),1,con.rs.getString(2),Double.parseDouble(con.rs.getString(2))*1};
                    model.addRow(col2);
                    f1=0;             
                }
            
            
            else if(KeyEvent.getKeyText(ke.getKeyCode()).equalsIgnoreCase("Enter")&& !searchtf.equals("")){
                DefaultTableModel model = (DefaultTableModel)table.getModel();
                model.setRowCount(0);
                con.rs = con.st.executeQuery("select * from sales where sale_id="+searchtf.getText());
                while(con.rs.next()){
                    Object col[] = new Object[]{con.rs.getString(1),con.rs.getString(2),con.rs.getString(3),con.rs.getString(4)};
                    model.addRow(col);
                }
            }
            }
            System.out.println("as");
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong");
      
        }
    }
    public void keyReleased(KeyEvent ke) {
    }
                     
}
